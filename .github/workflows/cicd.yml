name: Gradle CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
#      GitHub Actions는 리포지토리의 코드를 자동으로 복사해 오지 않습니다.
#      워크플로 안에서 파일을 읽거나 빌드하려면, 먼저 코드가 runner에 있어야 하므로
#      GitHub 레포지토리의 코드를 runner 머신(Ubuntu 등) 에 복제(clone)합니다.
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Run Tests
        run: ./gradlew test
  deploy:
    needs: build
    runs-on: self-hosted  # GitHub Actions는 원격에서 Docker Desktop에 접근할 수 없으므로, 반드시 로컬에 self-hosted runner를 설치해야 함
    steps:
      - name: Check out repository   # 🔧 이거 꼭 추가하세요!
      - uses: actions/checkout@v3

      - name: Build Docker image
        run: docker build -t test-app:latest .

      - name: Stop and remove old container if exists
        run: |
          docker stop test-app || true
          docker rm test-app || true

      - name: Run Docker container
        run: docker run -d --name test-java-app test-app:latest
#  deploy:
#    needs: build
#    runs-on: ubuntu-latest
#    if: github.ref == 'refs/heads/main'
#
#    steps:
#      - name: Deploy via SSH
#        uses: appleboy/ssh-action@v1.0.0
#        with:
#          host: ${{ secrets.SSH_HOST }}
#          username: ${{ secrets.SSH_USER }}
#          key: ${{ secrets.SSH_PRIVATE_KEY }}
#          script: |
#            cd /home/ubuntu/test
#            git pull origin main
#            ./deploy.sh
